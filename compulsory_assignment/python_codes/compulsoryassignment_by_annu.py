# -*- coding: utf-8 -*-
"""CompulsoryAssignment_by ANNU.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Asj9oUR6qXYQzqraHwY7RO5fv7msH_o

Compulspry assignment-
Sum and difference of 2 random variables and their grapgh of pdf and cdf


Name-ANNU
ROLLNO-EE21RESCH01010
"""

import numpy as np
import matplotlib.pyplot as plt

#Example cdf of sum of two random variables




# Number of random draws to use
ndraws = 1000
# Set this distance (in sigmas) large enough to capture all of the outliers
plotrange = 5
# Number of bins to use for pdf/cdf
nbin = 100
# Get random draws from a Gaussian
A = np.random.randn(1,ndraws)
B = np.random.randn(1,ndraws)
dfAB = A + B

# Calculate cdfs of A and B
Apdf, edges = np.histogram(A, bins=nbin, range=(-plotrange, plotrange))
Bpdf, edges = np.histogram(B, bins=nbin, range=(-plotrange, plotrange))
dfABpdf, edges = np.histogram(dfAB, bins=nbin, range=(-plotrange, plotrange))
xrng = (edges[0:-1] + edges[1:]) / 2

Acdf = np.cumsum(list(Apdf)) / ndraws
Bcdf = np.cumsum(list(Bpdf)) / ndraws
dfABcdf = np.cumsum(list(dfABpdf)) / ndraws

# Plot pdfs and sum of pdfs
fig = plt.figure()
ax1 = fig.add_subplot(1,2,1)
ax1.plot(xrng, Apdf)
ax1.set_title("A pdf")

ax2 = fig.add_subplot(1,2,2)
ax2.plot(xrng, Bpdf)
ax2.set_title("B pdf")

fig = plt.figure()
ax3 = fig.add_subplot(1,2,1)
ax3.plot(xrng, dfABpdf)
ax3.set_title("(A+B) pdf")

ax4 = fig.add_subplot(1,2,2)
ax4.plot(xrng, Apdf + Bpdf)
ax4.set_title("(A pdf) + (B pdf)")

# Plot cdfs and sum of cdfs
fig = plt.figure()
ax1 = fig.add_subplot(1,2,1)
ax1.plot(xrng, Acdf)
ax1.set_title("A cdf")

ax2 = fig.add_subplot(1,2,2)
ax2.plot(xrng, Bcdf)
ax2.set_title("B cdf")

fig = plt.figure()
ax3 = fig.add_subplot(1,2,1)
ax3.plot(xrng, dfABcdf)
ax3.set_title("(A+B) cdf")

ax4 = fig.add_subplot(1,2,2)
ax4.plot(xrng, Acdf + Bcdf)
ax4.set_title("(A cdf) + (B cdf)")

plt.show()

#Example cdf of difference of two random variables




# Number of random draws to use
ndraws = 1000
# Set this distance (in sigmas) large enough to capture all of the outliers
plotrange = 5
# Number of bins to use for pdf/cdf
nbin = 100
# Get random draws from a Gaussian
A = np.random.randn(1,ndraws)
B = np.random.randn(1,ndraws)
dfAB = A - B

# Calculate cdfs of A and B
Apdf, edges = np.histogram(A, bins=nbin, range=(-plotrange, plotrange))
Bpdf, edges = np.histogram(B, bins=nbin, range=(-plotrange, plotrange))
dfABpdf, edges = np.histogram(dfAB, bins=nbin, range=(-plotrange, plotrange))
xrng = (edges[0:-1] + edges[1:]) / 2

Acdf = np.cumsum(list(Apdf)) / ndraws
Bcdf = np.cumsum(list(Bpdf)) / ndraws
dfABcdf = np.cumsum(list(dfABpdf)) / ndraws


# Plot pdfs and difference of pdfs
fig = plt.figure()
ax1 = fig.add_subplot(1,2,1)
ax1.plot(xrng, Apdf)
ax1.set_title("A pdf")

ax2 = fig.add_subplot(1,2,2)
ax2.plot(xrng, Bpdf)
ax2.set_title("B pdf")

fig = plt.figure()
ax3 = fig.add_subplot(1,2,1)
ax3.plot(xrng, dfABpdf)
ax3.set_title("(A+B) pdf")

ax4 = fig.add_subplot(1,2,2)
ax4.plot(xrng, Apdf- Bpdf)
ax4.set_title("(A pdf) - (B pdf)")

# Plot cdfs and differences of cdfs
fig = plt.figure()
ax1 = fig.add_subplot(1,2,1)
ax1.plot(xrng, Acdf)
ax1.set_title("A cdf")

ax2 = fig.add_subplot(1,2,2)
ax2.plot(xrng, Bcdf)
ax2.set_title("B cdf")

fig = plt.figure()
ax3 = fig.add_subplot(1,2,1)
ax3.plot(xrng, dfABcdf)
ax3.set_title("(A-B) cdf")

ax4 = fig.add_subplot(1,2,2)
ax4.plot(xrng, Acdf - Bcdf)
ax4.set_title("(A cdf) - (B cdf)")

plt.show()